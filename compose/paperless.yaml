# Docker Compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  paperless-redis:
    image: docker.io/library/redis:7
    container_name: paperless-redis
    hostname: paperless-redis
    restart: always
    volumes:
      - redisdata:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  paperless-postgres:
    image: docker.io/library/postgres:16
    restart: always
    container_name: paperless-postgres
    hostname: paperless-postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 20s
      retries: 3

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.11.2
    restart: always
    container_name: paperless
    hostname: paperless
    depends_on:
      - paperless-postgres
      - paperless-redis
    ports:
#     - "8000:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
#      - ./export:/usr/src/paperless/export
#      - ./consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_URL: https://paperless.harrymartland.co.uk
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_DBHOST: paperless-postgres
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8000" ]
      interval: 30s
      timeout: 20s
      retries: 3
  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    container_name: paperless-gotenberg
    hostname: gotenberg
    restart: always
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
  tika:
    container_name: paperless-tika
    hostname: tika
    image: docker.io/apache/tika:latest
    restart: always
volumes:
  data:
  media:
  pgdata:
  redisdata: